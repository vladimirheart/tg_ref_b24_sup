import logging
from telebot import TeleBot, types
from database import get_db_connection
from bitrix24 import create_lead, create_contact
import os
from datetime import datetime

logger = logging.getLogger(__name__)

def setup_handlers(bot: TeleBot):
    
    @bot.message_handler(func=lambda message: True)
    def handle_message(message):
        try:
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–∏–ø–∞
            cursor.execute('''
                INSERT INTO chat_history (user_id, message, timestamp, message_id, message_type)
                VALUES (?, ?, ?, ?, ?)
            ''', (message.chat.id, message.text, message.date, message.message_id, 'text'))
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            logger.error(f"Error handling message: {e}")
            bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")

    @bot.message_handler(content_types=['photo'])
    def handle_photo(message):
        try:
            user_id = message.chat.id
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            file_id = message.photo[-1].file_id
            file_info = bot.get_file(file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            os.makedirs('photos', exist_ok=True)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            file_extension = file_info.file_path.split('.')[-1] if '.' in file_info.file_path else 'jpg'
            photo_filename = f"photos/{user_id}_{message.message_id}.{file_extension}"
            
            with open(photo_filename, 'wb') as new_file:
                new_file.write(downloaded_file)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ —Å —Ç–∏–ø–æ–º 'photo'
            cursor.execute('''
                INSERT INTO chat_history (user_id, message, timestamp, message_id, message_type)
                VALUES (?, ?, ?, ?, ?)
            ''', (user_id, f"photo:{photo_filename}", message.date, message.message_id, 'photo'))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute('''
                SELECT id, problem_description FROM applications 
                WHERE user_id = ? AND status = 'draft'
                ORDER BY created_at DESC LIMIT 1
            ''', (user_id,))
            
            application = cursor.fetchone()
            
            if application:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞—è–≤–∫—É —Å —Ñ–æ—Ç–æ
                app_id, problem_description = application
                cursor.execute('''
                    UPDATE applications SET photo_path = ? WHERE id = ?
                ''', (photo_filename, app_id))
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞—è–≤–∫—É
                if problem_description:
                    cursor.execute('''
                        UPDATE applications SET status = 'new' WHERE id = ?
                    ''', (app_id,))
                    
                    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É –≤ Bitrix24
                    try:
                        contact_id = create_contact(
                            user_id=user_id,
                            username=message.from_user.username,
                            first_name=message.from_user.first_name,
                            last_name=message.from_user.last_name
                        )
                        
                        deal_id = create_lead(
                            contact_id=contact_id,
                            description=problem_description,
                            photo_path=photo_filename
                        )
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É —Å ID –∏–∑ Bitrix24
                        cursor.execute('''
                            UPDATE applications 
                            SET b24_contact_id = ?, b24_deal_id = ?, status = 'processed'
                            WHERE id = ?
                        ''', (contact_id, deal_id, app_id))
                        
                        bot.send_message(
                            user_id, 
                            "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.\n"
                            "–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
                        )
                        
                    except Exception as e:
                        logger.error(f"Bitrix24 error: {e}")
                        bot.send_message(
                            user_id, 
                            "‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM.\n"
                            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω."
                        )
                else:
                    bot.send_message(
                        user_id, 
                        "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º."
                    )
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            logger.error(f"Error handling photo: {e}")
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ")

    @bot.message_handler(commands=['start'])
    def handle_start(message):
        try:
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute('''
                INSERT OR IGNORE INTO users (user_id, username, first_name, last_name)
                VALUES (?, ?, ?, ?)
            ''', (
                message.chat.id, 
                message.from_user.username, 
                message.from_user.first_name, 
                message.from_user.last_name
            ))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∏—Å—Ç–æ—Ä–∏—é
            cursor.execute('''
                INSERT INTO chat_history (user_id, message, timestamp, message_id, message_type)
                VALUES (?, ?, ?, ?, ?)
            ''', (message.chat.id, message.text, message.date, message.message_id, 'command'))
            
            conn.commit()
            conn.close()
            
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            welcome_text = (
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n"
                "–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ.\n\n"
                "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã\n"
                "üì∏ –ò–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ\n"
                "üñºÔ∏è –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ\n\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É..."
            )
            
            bot.send_message(message.chat.id, welcome_text)
            
        except Exception as e:
            logger.error(f"Error in start handler: {e}")
            bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞")

    @bot.message_handler(commands=['application'])
    def handle_application_command(message):
        try:
            user_id = message.chat.id
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∏—Å—Ç–æ—Ä–∏—é
            cursor.execute('''
                INSERT INTO chat_history (user_id, message, timestamp, message_id, message_type)
                VALUES (?, ?, ?, ?, ?)
            ''', (user_id, message.text, message.date, message.message_id, 'command'))
            
            # –°–æ–∑–¥–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –∑–∞—è–≤–∫–∏
            cursor.execute('''
                INSERT INTO applications (user_id, status)
                VALUES (?, 'draft')
            ''', (user_id,))
            
            conn.commit()
            conn.close()
            
            bot.send_message(
                user_id,
                "üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏\n\n"
                "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ.\n"
                "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ."
            )
            
        except Exception as e:
            logger.error(f"Error in application command: {e}")
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏")

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏)
    @bot.message_handler(func=lambda message: True, content_types=['text'])
    def handle_text_for_application(message):
        try:
            if message.text.startswith('/'):
                return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
                
            user_id = message.chat.id
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
            cursor.execute('''
                INSERT INTO chat_history (user_id, message, timestamp, message_id, message_type)
                VALUES (?, ?, ?, ?, ?)
            ''', (user_id, message.text, message.date, message.message_id, 'text'))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞
            cursor.execute('''
                SELECT id, photo_path FROM applications 
                WHERE user_id = ? AND status = 'draft'
                ORDER BY created_at DESC LIMIT 1
            ''', (user_id,))
            
            application = cursor.fetchone()
            
            if application:
                app_id, photo_path = application
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã
                cursor.execute('''
                    UPDATE applications 
                    SET problem_description = ?, 
                        status = CASE WHEN photo_path IS NOT NULL THEN 'new' ELSE 'draft' END
                    WHERE id = ?
                ''', (message.text, app_id))
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞—è–≤–∫—É
                if photo_path:
                    try:
                        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É –≤ Bitrix24
                        contact_id = create_contact(
                            user_id=user_id,
                            username=message.from_user.username,
                            first_name=message.from_user.first_name,
                            last_name=message.from_user.last_name
                        )
                        
                        deal_id = create_lead(
                            contact_id=contact_id,
                            description=message.text,
                            photo_path=photo_path
                        )
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É —Å ID –∏–∑ Bitrix24
                        cursor.execute('''
                            UPDATE applications 
                            SET b24_contact_id = ?, b24_deal_id = ?, status = 'processed'
                            WHERE id = ?
                        ''', (contact_id, deal_id, app_id))
                        
                        bot.send_message(
                            user_id, 
                            "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n"
                            "–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
                        )
                        
                    except Exception as e:
                        logger.error(f"Bitrix24 error: {e}")
                        cursor.execute('''
                            UPDATE applications SET status = 'new' WHERE id = ?
                        ''', (app_id,))
                        bot.send_message(
                            user_id, 
                            "‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM.\n"
                            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω."
                        )
                else:
                    bot.send_message(
                        user_id, 
                        "üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.\n"
                        "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏."
                    )
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
                cursor.execute('''
                    INSERT INTO applications (user_id, problem_description, status)
                    VALUES (?, ?, 'new')
                ''', (user_id, message.text))
                
                try:
                    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Å–¥–µ–ª–∫—É –≤ Bitrix24
                    contact_id = create_contact(
                        user_id=user_id,
                        username=message.from_user.username,
                        first_name=message.from_user.first_name,
                        last_name=message.from_user.last_name
                    )
                    
                    deal_id = create_lead(
                        contact_id=contact_id,
                        description=message.text,
                        photo_path=None
                    )
                    
                    cursor.execute('''
                        UPDATE applications 
                        SET b24_contact_id = ?, b24_deal_id = ?, status = 'processed'
                        WHERE user_id = ? AND status = 'new'
                    ''', (contact_id, deal_id, user_id))
                    
                    bot.send_message(
                        user_id, 
                        "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n"
                        "–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
                    )
                    
                except Exception as e:
                    logger.error(f"Bitrix24 error: {e}")
                    bot.send_message(
                        user_id, 
                        "‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM.\n"
                        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω."
                    )
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            logger.error(f"Error handling text for application: {e}")
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏")
